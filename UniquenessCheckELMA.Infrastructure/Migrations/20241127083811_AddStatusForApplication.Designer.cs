// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using UniquenessCheckELMA.Infrastructure;

#nullable disable

namespace UniquenessCheckELMA.Infrastructure.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20241127083811_AddStatusForApplication")]
    partial class AddStatusForApplication
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("UniquenessCheckELMA.Domain.Entities.Application", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<long>("PhysicalPersonId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProcessInstanceId")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("PhysicalPersonId");

                    b.HasIndex("ProcessInstanceId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("UniquenessCheckELMA.Domain.Entities.PhysicalPerson", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.HasKey("Id");

                    b.ToTable("PhysicalPersons");
                });

            modelBuilder.Entity("UniquenessCheckELMA.Domain.Entities.ProcessInstance", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("ProcessInstances");
                });

            modelBuilder.Entity("UniquenessCheckELMA.Domain.Entities.Application", b =>
                {
                    b.HasOne("UniquenessCheckELMA.Domain.Entities.PhysicalPerson", "PhysicalPerson")
                        .WithMany("Applications")
                        .HasForeignKey("PhysicalPersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniquenessCheckELMA.Domain.Entities.ProcessInstance", "ProcessInstance")
                        .WithMany("Applications")
                        .HasForeignKey("ProcessInstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PhysicalPerson");

                    b.Navigation("ProcessInstance");
                });

            modelBuilder.Entity("UniquenessCheckELMA.Domain.Entities.PhysicalPerson", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("UniquenessCheckELMA.Domain.Entities.ProcessInstance", b =>
                {
                    b.Navigation("Applications");
                });
#pragma warning restore 612, 618
        }
    }
}
